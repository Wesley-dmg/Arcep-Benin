# Generated by Django 5.1.1 on 2024-10-30 20:55

import apps.home.models
import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Departement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=255, unique=True, verbose_name='Nom du département')),
            ],
        ),
        migrations.CreateModel(
            name='Emplacement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type_emplacement', models.CharField(max_length=255, verbose_name="Type d'emplacement")),
            ],
            options={
                'verbose_name': 'Emplacement',
                'verbose_name_plural': 'Emplacements',
            },
        ),
        migrations.CreateModel(
            name='Operateur',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=255, unique=True, verbose_name="Nom de l'opérateur")),
                ('logo', models.ImageField(blank=True, null=True, upload_to='Operateurs/', verbose_name="Logo de l'opérateur")),
                ('couleur', models.CharField(blank=True, max_length=50, null=True, verbose_name="Couleur de l'opérateur")),
            ],
            options={
                'verbose_name': 'Opérateur',
                'verbose_name_plural': 'Opérateurs',
                'ordering': ['nom'],
            },
        ),
        migrations.CreateModel(
            name='Technologie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(choices=[('5G-MMWAVE', '5G mmWave'), ('5G-NR', '5G NR'), ('5G-SUB_6', '5G Sub-6 GHz'), ('ADSL', 'ADSL'), ('BLUETOOTH-4', 'Bluetooth 4.0 (LE)'), ('BLUETOOTH-5', 'Bluetooth 5.0'), ('CABLE-DOCSIS', 'Cable DOCSIS'), ('EDGE', 'EDGE'), ('FEMTOCELL', 'Femtocell'), ('FTTH-EPON', 'FTTH EPON'), ('FTTH-GPON', 'FTTH GPON'), ('GPRS', 'GPRS'), ('GSM-1800', 'GSM 1800'), ('GSM-900', 'GSM 900'), ('HSPA', 'HSPA'), ('HSPA-PLUS', 'HSPA+'), ('LORA', 'LoRa'), ('LORAWAN', 'LoRaWAN'), ('LTE-1800', 'LTE 1800'), ('LTE-2600', 'LTE 2600'), ('LTE-800', 'LTE 800'), ('LTE-A', 'LTE-A'), ('LTE-M', 'LTE-M'), ('MICRO-CELL', 'Micro Cell'), ('MICROWAVE-PTP', 'Microwave Point-to-Point'), ('MICROWAVE-PTMP', 'Microwave Point-to-Multipoint'), ('MPLS', 'MPLS'), ('NB-IOT', 'NB-IoT'), ('P25', 'P25'), ('PICO-CELL', 'Pico Cell'), ('SAT-VSAT', 'Satellite VSAT'), ('SIGFOX', 'Sigfox'), ('TETRA', 'TETRA'), ('UMTS-2100', 'UMTS 2100'), ('UMTS-900', 'UMTS 900'), ('VDSL', 'VDSL'), ('VPN', 'VPN'), ('WIFI', 'Wi-Fi'), ('Z-WAVE', 'Z-Wave'), ('ZIGBEE', 'Zigbee')], max_length=255, verbose_name='Nom de la technologie')),
            ],
            options={
                'verbose_name': 'Technologie',
                'verbose_name_plural': 'Technologies',
                'ordering': ['nom'],
            },
        ),
        migrations.CreateModel(
            name='UploadedFile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='Uploads/excel/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Commune',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=255, verbose_name='Nom de la commune')),
                ('departement', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.departement', verbose_name='Département')),
            ],
        ),
        migrations.CreateModel(
            name='Localite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('localite', models.CharField(max_length=255, verbose_name='Localité')),
                ('commune', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.commune', verbose_name='Commune')),
            ],
            options={
                'verbose_name': 'Localité',
                'verbose_name_plural': 'Localités',
            },
        ),
        migrations.CreateModel(
            name='Site',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nom', models.CharField(max_length=255, verbose_name='Nom du site')),
                ('photo', models.ImageField(blank=True, null=True, upload_to='Sites/', verbose_name='Photo du site')),
                ('latitude', models.DecimalField(blank=True, decimal_places=12, max_digits=15, null=True, verbose_name='Latitude')),
                ('longitude', models.DecimalField(blank=True, decimal_places=12, max_digits=15, null=True, verbose_name='Longitude')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Description')),
                ('date_mise_en_service', models.DateField(blank=True, null=True, verbose_name='Date de mise en service')),
                ('type_pylone', models.CharField(blank=True, max_length=255, null=True, verbose_name='Type de pylône')),
                ('hauteur_antenne', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name="Hauteur de l'antenne")),
                ('camouflage', models.BooleanField(default=False, verbose_name='Camouflage')),
                ('proprietaire', models.CharField(blank=True, max_length=255, null=True, verbose_name='Propriétaire')),
                ('num_dossier', models.CharField(blank=True, max_length=255, null=True, verbose_name='Numéro de dossier')),
                ('add_at', models.DateTimeField(auto_now_add=True, verbose_name="Date d'ajout")),
                ('ref_courrier', models.CharField(blank=True, max_length=255, null=True, verbose_name='Référence de courrier')),
                ('observation', models.TextField(blank=True, null=True, verbose_name='Observation')),
                ('avis_arcep', models.TextField(blank=True, null=True, verbose_name='Avis ARCEP')),
                ('date_autorisation', models.DateField(blank=True, null=True, verbose_name="Date d'autorisation")),
                ('emplacement', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='home.emplacement', verbose_name='Emplacement')),
                ('localite', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.PROTECT, to='home.localite', verbose_name='Localité')),
                ('operateur', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='home.operateur', verbose_name='Opérateur')),
            ],
            options={
                'verbose_name': 'Site',
                'verbose_name_plural': 'Sites',
            },
        ),
        migrations.CreateModel(
            name='Conformite',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rapport', models.FileField(upload_to='Uploads/pdf/', validators=[apps.home.models.validate_pdf], verbose_name='Rapport(PDF)')),
                ('date_inspection', models.DateField(verbose_name="Date d'inspection")),
                ('statut', models.BooleanField(verbose_name='Statut de conformité')),
                ('site', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='conformite', to='home.site', verbose_name='Site conforme')),
            ],
            options={
                'verbose_name': 'Conformité',
                'verbose_name_plural': 'Conformités',
            },
        ),
        migrations.CreateModel(
            name='SiteTechnologie',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_ajout', models.DateTimeField(auto_now_add=True, verbose_name="Date d'ajout de la technologie")),
                ('site', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.site', verbose_name='Site')),
                ('technologie', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='home.technologie', verbose_name='Technologie')),
            ],
            options={
                'verbose_name': 'Technologie du site',
                'verbose_name_plural': 'Technologies des sites',
            },
        ),
        migrations.AddField(
            model_name='site',
            name='technologies',
            field=models.ManyToManyField(through='home.SiteTechnologie', to='home.technologie'),
        ),
        migrations.AddConstraint(
            model_name='sitetechnologie',
            constraint=models.UniqueConstraint(fields=('site', 'technologie'), name='unique_site_technologie'),
        ),
    ]
